AWSTemplateFormatVersion: 2010-09-09

# Gratefully copied from https://levelup.gitconnected.com/automate-cross-account-cloudformation-deployment-using-aws-codepipeline-c71d81b45722
# Also https://docs.aws.amazon.com/codepipeline/latest/userguide/pipelines-create-cross-account.html
Description: The AWS CloudFormation template for creating cross account role to be assumed by CiCd account to carry out deployment in this child account where the role would be created

Parameters:
  CiCdAccountId:
    Description : Account ID of the Shared AWS Account that initiates code deployment to this account.
    Type: String
    ConstraintDescription: Must be a valid AWS Account ID without hyphens.
    AllowedPattern: '\d{12}'
    MinLength: 12
    MaxLength: 12
  Environment:
    Description: Environment corresponding to this account
    Type: String
    AllowedValues: ['devtest', 'prod']
    Default: 'devtest'

Resources:
  CrossAccountDeploymentRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Join ['-', ["cross-account-role", !Ref Environment]]
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          -
            Effect: Allow
            Principal:
              AWS:
                - !Sub arn:aws:iam::${CiCdAccountId}:root
            Action:
              - sts:AssumeRole

  CrossAccountDeploymentPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      Description: Allows pipeline in CiCd account to deploy the built stacks
      ManagedPolicyName: cross-account-policy-cicd-deployment
      Roles:
        - !Ref CrossAccountDeploymentRole
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: IAMRolesPermissions
            # Needed for passing CFExecutionRole to Cloudformation Service
            Effect: Allow
            Action:
              - iam:PassRole
              - iam:GetRole
            Resource: '*'
          - Sid: S3FullAccess
            # To Get and Put deployment artifacts in serverless deployment bucket
            Effect: Allow
            Action:
              - s3:*
            Resource: '*'
          - Sid: LambdaFullAccess
            # To Get and Put deployment artifacts in serverless deployment bucket
            Effect: Allow
            Action:
              - lambda:*
            Resource: '*'
          - Sid: CloudFormationFullAccess
            # To create serverless deployment cloudformation stack
            Effect: Allow
            Action:
              - cloudformation:*
            Resource: '*'
          - Sid: KMSFullAccess
            # TODO: tighten to the specific. Goes for all of the above, really.
            Effect: Allow
            Action:
              - kms:*
            Resource: '*'

  CFExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName:  !Join ['-', ["cf-execution-role", !Ref Environment]]
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          -
            Effect: Allow
            Principal:
              Service:
                - cloudformation.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: CFExecutionRolePolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - 'cloudformation:*'
                  - 'dynamodb:*'
                  - 'ec2:*'
                  - 'events:*'
                  - 'iam:*'
                  - 'lambda:*'
                  - 's3:*'
                Resource: '*'

              
Outputs:
  OutCrossAccountDeploymentRole:
    Description: Cross Account Deployment Role ARN
    Value: !GetAtt CrossAccountDeploymentRole.Arn
    Export:
      Name: !Join ['-', ["CrossAccount-DeploymentRoleArn", !Ref Environment]]

  OutCrossAccountDeploymentPolicy:
    Description: Cross Account Deployment Policy ARN
    Value: !Ref CrossAccountDeploymentPolicy
    Export:
      Name: !Join ['-', ["CrossAccount-DeploymentPolicyArn", !Ref Environment]]